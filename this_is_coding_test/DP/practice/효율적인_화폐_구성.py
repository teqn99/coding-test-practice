"""
N가지 종류의 화폐가 있다.
이 화폐들의 개수를 최소한으로 이용해서 극 ㅏ치의 합이 M원이 되도록 한다.
화폐는 몇 개라도 사용할 수 있으며, 사용한 화폐의 구성은 같지만 순서가 다른 것은 같은 경우로 구분한다.
- 첫째 줄에 N, M이 주어진다. (1 <= N <= 100, 1 <= M <= 10000)
- 이후 N개의 줄에는 각 화폐의 가치가 주어진다. 화폐가치는 10000보다 작거나 같은 자연수이다.
- 첫째 줄에 M원을 만들기 위한 최소한의 화폐 개수를 출력한다.
- 불가능할 때는 -1을 출력한다.
"""
n, m = map(int, input().split())
coins = []
for i in range(n):
    coins.append(int(input()))

d = [10001] * 101  # min으로 비교를 할 것이기 때문에, M의 최대보다 큰 10001로 지정
d[0] = 0

for i in range(n):
    for j in range(coins[i], m + 1):
        d[j] = min(d[j], d[j - coins[i]] + 1)  # 만일 화폐 2원의 경우, d[2]는 d[0]에 비해 1번의 화폐를 사용한 것임. 이런 뉘앙스로 계속 바텀업 진행

if d[m] == 10001:
    print(-1)
else:
    print(d[m])